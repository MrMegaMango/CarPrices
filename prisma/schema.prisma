// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  carDeals      CarDeal[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model CarMake {
  id       String     @id @default(cuid())
  name     String     @unique
  logo     String?
  models   CarModel[]
  carDeals CarDeal[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("car_makes")
}

model CarModel {
  id       String    @id @default(cuid())
  name     String
  makeId   String
  make     CarMake   @relation(fields: [makeId], references: [id], onDelete: Cascade)
  carDeals CarDeal[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, makeId])
  @@map("car_models")
}

model CarDeal {
  id                String      @id @default(cuid())
  userId            String
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Car Information
  makeId            String
  make              CarMake     @relation(fields: [makeId], references: [id])
  modelId           String
  model             CarModel    @relation(fields: [modelId], references: [id])
  year              Int
  trim              String?
  color             String?
  
  // Pricing Information
  msrp              Int         // in cents
  sellingPrice      Int         // in cents
  otdPrice          Int?        // out the door price in cents
  rebates           Int?        // in cents
  tradeInValue      Int?        // in cents
  
  // Deal Details
  dealerName        String?
  dealerLocation    String?     // City, State
  dealDate          DateTime
  financingRate     Float?      // APR as decimal (5.5% = 0.055)
  financingTerm     Int?        // months
  downPayment       Int?        // in cents
  monthlyPayment    Int?        // in cents
  
  // Additional Info
  notes             String?
  isLeased          Boolean     @default(false)
  leaseTermMonths   Int?
  mileageAllowance  Int?        // annual miles for lease
  
  // Metadata
  verified          Boolean     @default(false)
  isPublic          Boolean     @default(true)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  @@map("car_deals")
}
