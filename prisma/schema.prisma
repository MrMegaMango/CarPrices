generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  carDeals      CarDeal[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model CarMake {
  id        String     @id @default(cuid())
  name      String     @unique
  logo      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  carDeals  CarDeal[]
  models    CarModel[]

  @@map("car_makes")
}

model CarModel {
  id        String    @id @default(cuid())
  name      String
  makeId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  carDeals  CarDeal[]
  make      CarMake   @relation(fields: [makeId], references: [id], onDelete: Cascade)

  @@unique([name, makeId])
  @@map("car_models")
}

model CarDeal {
  id               String   @id @default(cuid())
  userId           String
  makeId           String
  modelId          String
  year             Int
  trim             String?
  color            String?
  msrp             Int
  sellingPrice     Int
  otdPrice         Int?
  rebates          Int?
  tradeInValue     Int?
  dealerName       String?
  dealerLocation   String?
  dealDate         DateTime
  financingRate    Float?
  financingTerm    Int?
  downPayment      Int?
  monthlyPayment   Int?
  notes            String?
  isLeased         Boolean  @default(false)
  leaseTermMonths  Int?
  mileageAllowance Int?
  verified         Boolean  @default(false)
  isPublic         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  make             CarMake  @relation(fields: [makeId], references: [id])
  model            CarModel @relation(fields: [modelId], references: [id])
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("car_deals")
}
